-- Kubernetes types and defaults
let Types   = ./dhall-kubernetes/api/Service/RawTypes
let default = ./dhall-kubernetes/api/Service/RawDefaults
let ServiceType = ./dhall-kubernetes/api/Service/ServiceType
let IntOrString    = ./dhall-kubernetes/types/io.k8s.apimachinery.pkg.util.intstr.IntOrString.dhall

-- Prelude
let Prelude = ./dhall-kubernetes/Prelude.dhall
let kv = Prelude.JSON.keyText
let map = Prelude.`List`.map

let IstioPort =
  { targetPort	: Natural
  , port     	: Natural
  , name		: Text
  }

let IstioService =
  { name		: Text
  , ports		: List IstioPort
  }

let mkIstioPort : IstioPort -> Types.Port =
  λ(p : IstioPort) →
  default.port {port = p.port} //
  { targetPort  = Some (IntOrString.Int p.targetPort)
  , name = Some p.name
  }

let mkIstioPorts = map IstioPort Types.Port mkIstioPort

let mkIstioService : IstioService → Types.Service =

  λ(service : IstioService) →

  let selector = Some [kv "app" service.name]

  let meta = default.meta
  { name = service.name } //
  { labels = selector
  }

  let spec = default.spec //
  { type = Some "ClusterIP"
  , ports = Some (mkIstioPorts service.ports)
  , selector = selector
  }

  in default.service
  { metadata = meta
  } //
  { spec = Some spec
  } : Types.Service

in mkIstioService
